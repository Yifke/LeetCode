class Solution {
public:
    string longestPalindrome(string s) {
        int start = 0;
        int end = 0;
        int len = s.length();
        if(len == 0) return "";
        vector<vector<int>> dp(len, vector<int>(len, 0));
        
        for(int i = len-1; i >= 0; i--)
        {
            for(int j = i; j < len; j++)
            {
                if(s.at(i) == s.at(j))
                {
                    if(j == i) dp[i][j] = 1;
                    else if(j == i+1)
                    {
                        dp[i][j] = 2;
                        if(j-i > end-start)
                        {
                            start = i;
                            end = j;
                        }
                    }
                    else if(dp[i+1][j-1] == j-i-1)  
                    {
                        dp[i][j] = dp[i+1][j-1]+2;
                        if(j-i > end-start)
                        {
                            start = i;
                            end = j;
                        }
                    }
                }
            }
        }
        
        return s.substr(start, end-start+1);
    }
};