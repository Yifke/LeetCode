/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        if(head == NULL || head->next == NULL)
            return head;
        ListNode* first = head;
        ListNode* second = head->next;
        head = swap(first, second);

        while(first->next != NULL && first->next->next != NULL)
        {
            first->next = swap(first->next, first->next->next);
            first = first->next->next;
        }
        
        return head;
    }
    
    ListNode* swap(ListNode* L1, ListNode* L2){
        L1->next = L2->next;
        L2->next = L1;
        return L2;
    }
};